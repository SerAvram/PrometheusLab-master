import logging
from prometheus_client import start_http_server, Counter, Gauge, Histogram
from prometheus_client.exposition import generate_latest
from prometheus_client import REGISTRY
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters

# Налаштування логування
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# Токен вашого Telegram-бота
TOKEN = '7493472977:AAGeK-hlJUPhUBpFlSFdO0e0FI1uu-rL5x8'

# Метрики
request_counter = Counter('telegram_bot_requests_total', 'Total number of requests')
active_users_gauge = Gauge('telegram_bot_active_users', 'Number of active users')
message_length_histogram = Histogram('telegram_bot_message_length_bytes', 'Message length in bytes')

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    active_users_gauge.inc()
    await context.bot.send_message(chat_id=update.effective_chat.id, text="Привіт! Я бот для метрик.")

async def metrics(update: Update, context: ContextTypes.DEFAULT_TYPE):
    request_counter.inc()
    metrics_text = generate_latest(REGISTRY).decode('utf-8')  # Перетворюємо bytes у str
    await context.bot.send_message(chat_id=update.effective_chat.id, text=metrics_text)

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message_length_histogram.observe(len(update.message.text.encode('utf-8')))

def main():
    application = ApplicationBuilder().token(TOKEN).build()

    # Додаємо обробники команд
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("metrics", metrics))

    # Додаємо обробник повідомлень
    application.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), message_handler))

    # Запускаємо веб-сервер для експорту метрик
    start_http_server(9091)

    # Запускаємо бота
    application.run_polling()

if __name__ == '__main__':
    main()
